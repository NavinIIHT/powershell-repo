import java.io.BufferedReader;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.io.IOException;

public class PowerShellScriptValidator {

    public static void main(String[] args) {
        // Path to the PowerShell script (.ps1 file)
        String scriptPath = "C:\\path\\to\\your\\SystemResourceMonitor.ps1"; // Update this path

        // Read and execute each command from the PowerShell script
        try (BufferedReader br = new BufferedReader(new FileReader(scriptPath))) {
            String command;
            int step = 1;
            
            while ((command = br.readLine()) != null) {
                if (!command.trim().isEmpty()) {  // Skip empty lines
                    System.out.println("Executing Step " + step + ": " + command);
                    executePowerShellCommand(command);
                    step++;
                }
            }
        } catch (IOException e) {
            System.out.println("An error occurred while reading the PowerShell script file.");
            e.printStackTrace();
        }
    }

    private static void executePowerShellCommand(String command) {
        try {
            // Construct the PowerShell command
            String fullCommand = "powershell.exe -Command \"" + command + "\"";

            // Execute the command
            Process powerShellProcess = Runtime.getRuntime().exec(fullCommand);

            // Get the standard output
            BufferedReader stdInput = new BufferedReader(new InputStreamReader(powerShellProcess.getInputStream()));
            StringBuilder output = new StringBuilder();
            String line;

            // Read the output from the command
            while ((line = stdInput.readLine()) != null) {
                output.append(line).append("\n");
            }

            // Get the standard error
            BufferedReader stdError = new BufferedReader(new InputStreamReader(powerShellProcess.getErrorStream()));
            StringBuilder errorOutput = new StringBuilder();

            // Read the errors from the command, if any
            while ((line = stdError.readLine()) != null) {
                errorOutput.append(line).append("\n");
            }

            // Wait for the PowerShell process to complete
            int exitCode = powerShellProcess.waitFor();

            // Check the exit code and output
            if (exitCode == 0 && errorOutput.length() == 0) {
                System.out.println("Step executed successfully.");
                System.out.println("Output:\n" + output);
            } else {
                System.out.println("Step execution failed.");
                System.out.println("Error Output:\n" + errorOutput);
            }

        } catch (IOException | InterruptedException e) {
            System.out.println("An error occurred while executing the PowerShell command.");
            e.printStackTrace();
        }
    }
}